@page "/Config"
@using dba.Models
@using dba.Services
@using Microsoft.AspNetCore.Authorization
@inject IDbaService DbaService
@attribute [Authorize]
<h3>Config</h3>

@code {
    List<dba.Models.Config>? configs;
    dba.Models.Config config = new dba.Models.Config();
    private string versionId { get; set; } = "";
    private int _pageSize { get; set; }

    private int CurrentPage { get; set; } = 1;
    private int TotalPages { get; set; }
    private int TotalRows { get; set; }
    private bool HasNext { get; set; }
    private bool HasPrevious { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //selectedCompanies.Clear();
        _pageSize = 10;
        await Refresh();
    }
    private async Task Refresh()
    {
        configs = await DbaService.GetConfig();
        if (versionId == "")
        {
            TotalRows = configs.Count();
            TotalPages = (int)Math.Ceiling(TotalRows / (double)_pageSize);
            configs = configs.Skip((CurrentPage - 1) * _pageSize).Take(_pageSize).ToList();
        }
        if (CurrentPage > 1)
        {
            HasPrevious = true;
        }
        else
        {
            HasPrevious = false;
        }
        if (CurrentPage < TotalPages)
        {
            HasNext = true;
        }
        else
        {
            HasNext = false;
        }
        //InvokeAsync(StateHasChanged);
    }

}
